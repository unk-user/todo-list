(()=>{class e{constructor(e,t="none",s="none",i="none"){this.title=e,this.description=t,this.dueDate=s,this.priority=i}getTitle(){return this.title}setTitle(e){this.title=e}getDesc(){return this.description}setDesc(e){this.description=e}getDate(){return this.dueDate}setDate(e){this.dueDate=e}getPrio(){return this.priority}setPrio(e){this.priority=e}}class t{constructor(e,t){this.title=e,this.mode=t,this.tasks=[]}getMode(){return this.mode}setMode(e){this.mode=e}getTitle(){return this.title}setTitle(e){this.title=e}getTaskByTitle(e){return this.tasks.find((t=>t.getTitle()===e))}getTasks(){return this.tasks}setTasks(e){this.tasks=e}addTask(e){this.tasks.push(e)}containsTask(e){return this.tasks.some((t=>t.getTitle()===e))}removeTask(e){this.tasks=this.tasks.filter((t=>t!==e))}}class s{constructor(){this.projects=[],this.projects.push(new t("Inbox","default")),this.projects.push(new t("Today","default"))}getProjectByTitle(e){return this.projects.find((t=>t.getTitle()===e))}addProject(e){this.projects.push(e)}getProjects(){return this.projects}setProjects(e){this.projects=e}removeProject(e){this.projects=this.projects.filter((t=>t!==e))}containsProject(e){return this.project.some((t=>t.getTitle()===e))}}class i{static saveTodoList(e){localStorage.setItem("todolist",JSON.stringify(e))}static getTodoList(){const i=Object.assign(new s,JSON.parse(localStorage.getItem("todolist")));return i.setProjects(i.getProjects().map((e=>Object.assign(new t,e)))),i.getProjects().forEach((t=>{t.setTasks(t.getTasks().map((t=>Object.assign(new e,t))))})),i}}const n=document.querySelector("#checkbox"),o=document.querySelector("nav");n.addEventListener("click",(()=>{const e=document.querySelector("#mainSection");n.checked?(o.style.position="relative",o.style.left="0",e.style.width="calc(100% - 260px)"):(o.style.position="absolute",o.style.left="-300px",e.style.width="100%")}));let r=(createTodoList=()=>{let e;return e=void 0===localStorage.getItem("todolist")?new s:i.getTodoList(),e})();(class{static refreshNav(){const e=document.querySelector("#userProjects");document.querySelectorAll(".user").forEach((e=>e.remove())),r.getProjects().forEach((t=>{let s=document.createElement("button");if(s.setAttribute("id",`${t.getTitle()}Btn`),s.classList+="navBtn link user",s.textContent=`${t.getTitle()}`,"user"===t.getMode()){let i=document.createElement("div");i.className="removeProject",i.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-trash-2"><polyline points="3 6 5 6 21 6"></polyline><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path><line x1="10" y1="11" x2="10" y2="17"></line><line x1="14" y1="11" x2="14" y2="17"></line></svg>',s.appendChild(i),this.projectEventListeners(s,t,i),e.appendChild(s)}}))}static loadNavItems(){const e=document.querySelector("#defaultProjects"),t=document.querySelector("#userProjects");r.getProjects().forEach((s=>{let i=document.createElement("button");if(i.setAttribute("id",`${s.getTitle()}Btn`),i.classList+="navBtn link",i.textContent=`${s.getTitle()}`,"default"===s.getMode())e.appendChild(i),this.projectEventListeners(i,s,"none");else{let e=document.createElement("div");e.className="removeProject",i.classList+=" user",e.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-trash-2"><polyline points="3 6 5 6 21 6"></polyline><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path><line x1="10" y1="11" x2="10" y2="17"></line><line x1="14" y1="11" x2="14" y2="17"></line></svg>',i.appendChild(e),this.projectEventListeners(i,s,e),t.appendChild(i)}}))}static projectEventListeners(e,t,s){e.addEventListener("click",(()=>{this.setActiveNav(e),this.loadTasks(t)})),"none"!==s&&s.addEventListener("mousedown",(()=>{this.setActiveNav(document.querySelector("#InboxBtn")),this.deleteProject(t),this.loadTasks(r.getProjectByTitle("Inbox"))}))}static setActiveNav(e){document.querySelectorAll(".link").forEach((e=>{let t=JSON.stringify(e.classList);t.includes("activeNav")&&t.includes("user")?e.classList="navBtn link user":t.includes("activeNav")&&(e.classList="navBtn link")})),e.classList+=" activeNav"}static TasksListeners(e,t){document.querySelectorAll(".task").forEach((t=>{t.lastChild.querySelector("#removeBtn").addEventListener("click",(()=>{this.removeTaskDiv(e,e.getTaskByTitle(`${t.id}`))}))}))}static removeTaskDiv(e,t){e.removeTask(t),this.loadTasks(e),i.saveTodoList(r)}static loadTasks(e){e!==r.getProjectByTitle("Today")?document.querySelector("#tasksContainer").innerHTML='<div id="addTask">+ Add task</div>':document.querySelector("#tasksContainer").innerHTML="",e.getTasks().forEach((e=>{let t=document.createElement("div");t.setAttribute("id",`${e.getTitle()}`),t.classList+="task",t.innerHTML=`\n                <div class="taskLeft">\n                    <p>${e.getTitle()}</p>\n                    <p id="description">${e.getDesc()}</p>\n                </div>\n                <div class="taskRight">\n                    <p>${e.getDate()}</p>\n                    <p>${e.getPrio()}</p>\n                    <button id="removeBtn" class="taskBtn">X</button>\n                </div>`,document.querySelector("#tasksContainer").appendChild(t)})),this.TasksListeners(e),this.addTaskListener(e)}static deleteProject(e){r.removeProject(e),document.querySelector(`#${e.getTitle()}Btn`).remove(),i.saveTodoList(r)}static loadUi(){this.loadNavItems(),this.loadTasks(r.getProjectByTitle("Inbox")),this.openNewProjectL()}static openNewProjectL(){const e=document.querySelector("#addProject"),s=document.querySelector("#userProjects");e.addEventListener("click",(()=>{let e=document.createElement("div");e.setAttribute("id","newProjectCard");const n=document.createElement("input");n.setAttribute("id","newProjectTitle"),n.setAttribute("type","name"),e.appendChild(n);const o=document.createElement("div");o.setAttribute("id","newProjectAction");const a=document.createElement("button"),c=document.createElement("button");a.setAttribute("id","saveNewProject"),a.textContent="Save",c.setAttribute("id","cancelNewProject"),c.textContent="Cancel",o.appendChild(a),o.appendChild(c),e.appendChild(o),a.addEventListener("click",(()=>{if(""!==n.value){let e=new t(n.value,"user");r.addProject(e),i.saveTodoList(r),this.closeNewProjectL()}})),c.addEventListener("click",(()=>{this.closeNewProjectL()})),s.appendChild(e)}))}static closeNewProjectL(){document.querySelector("#newProjectTitle").value="",document.querySelector("#newProjectCard").remove(),this.refreshNav()}static openAddTask(e){const t=document.querySelector("#tasksContainer");if(null===document.querySelector("#newTaskPopUp")){let s=document.createElement("div");s.setAttribute("id","newTaskPopUp"),s.innerHTML='\n            <input type="name" placeholder="Task Name" class="text-input" id="newName">\n                        <input type="text" placeholder="description" class="text-input" id="newDesc">\n                        <div id="date-priority">\n                            <input type="date" class="nonText-input" id="newDate">\n                            <label for="newPriority">Priority</label>\n                            <select name="" id="newPriority" class="nonText-input">\n                            <option value="priority 1">priority 1</option>\n                            <option value="priority 2">priority 2</option>\n                            <option value="priority 3">priority 3</option>\n                            <option value="priority 4">priority 4</option>\n                            </select>\n                            <button id="saveTask" class="taskAction">Save</button>\n                            <button id="cancelTask" class="taskAction">Cancel</button>\n                        </div>',t.innerHTML='<div id="addTask">+ Add task</div>',t.appendChild(s),this.taskPopUpListeners(e)}}static closeAddTask(e){document.querySelector("#tasksContainer");const t=document.querySelector("#newTaskPopUp");"null"!==t&&(t.remove(),this.loadTasks(e))}static saveNewTask(t){let s=document.querySelector("#newName").value,n=document.querySelector("#newDesc").value,o=document.querySelector("#newDate").value,a=document.querySelector("#newPriority").value;if(""!==s){let c=new e(s,n,o,a);t.addTask(c),i.saveTodoList(r)}}static taskPopUpListeners(e){document.querySelector("#saveTask").addEventListener("click",(()=>{this.saveNewTask(e),this.closeAddTask(e)})),document.querySelector("#cancelTask").addEventListener("click",(()=>{this.closeAddTask(e)}))}static addTaskListener(e){document.querySelector("#addTask").addEventListener("click",(()=>{this.openAddTask(e)}))}}).loadUi()})();